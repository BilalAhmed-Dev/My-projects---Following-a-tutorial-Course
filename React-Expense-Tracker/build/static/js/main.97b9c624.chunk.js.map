{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/ExpensesFilter/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/DisplayExpenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","children","ExpenseItem","title","amount","ExpensesList","data","length","map","item","id","ExpensesFilter","value","selected","onChange","e","onYearChange","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","DisplayExpenses","useState","setYear","filteredPropsArray","filter","prop","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","Date","onExpenseFormSubmition","type","min","step","prevState","onClick","onCancel","NewExpense","isEditing","setisEditing","enteredExpenseData","random","toString","onExpenses","DUMMY_EXPENSES","App","setExpenses","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97b9c624.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\nconst Card = (props) => {\r\n  return <div className={`card ${props.className}`}>{props.children}</div>;\r\n};\r\nexport default Card;\r\n","// import { useState } from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\nconst ExpenseItem = (props) => {\r\n  // function clickHandler() {}\r\n  // const [title, setTitle] = useState(props.title); // i could use empty useState to create an empty variable and then assign it with setTitle\r\n  // const [date, setDate] = useState(props.date); // i could use empty useState to create an empty variable and then assign it with setTitle\r\n\r\n  // const clickHandler = () => {\r\n  //   setTitle(Math.floor(Math.random() * 100));\r\n  //   setDate(new Date(Date.now()));\r\n  //   console.log(\"clicked\");\r\n  // };\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        {/* <button onClick={clickHandler}>Change Title</button> */}\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\nconst ExpensesList = (props) => {\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.data.length > 0 ? (\r\n        props.data.map((item) => (\r\n          <ExpenseItem\r\n            key={item.id}\r\n            title={item.title}\r\n            amount={item.amount}\r\n            date={item.date}\r\n          />\r\n        ))\r\n      ) : (\r\n        <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const selectHandler = (e) => {\r\n    props.onYearChange(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={selectHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"1999\">1999</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nconst Chart = (props) => {\r\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"June\", value: 0 },\r\n    { label: \"July\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import ExpensesList from \"./ExpensesList\";\r\nimport { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./DisplayExpenses.css\";\r\nconst DisplayExpenses = (props) => {\r\n  const [year, setYear] = useState(2021);\r\n  // const [props_values, setProps] = useState(props);\r\n  const onYearChangeHandler = (year) => {\r\n    setYear(year);\r\n    // setProps(props_values);\r\n  };\r\n\r\n  // console.log(props.data);\r\n  const filteredPropsArray = props.data.filter(\r\n    (prop) => prop.date.getFullYear() === +year\r\n  );\r\n  // console.log(filteredPropsArray);\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter selected={year} onYearChange={onYearChangeHandler} />\r\n      <ExpensesChart expenses={filteredPropsArray} />\r\n      <ExpensesList data={filteredPropsArray} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DisplayExpenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  //OPTION 1\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  // const [enterdAmount, setEnterdAmount] = useState(\"\");\r\n  // const [date, setDate] = useState(\"\");\r\n\r\n  //OPTION 2\r\n  const [userInput, setUserInput] = useState({\r\n    // enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  });\r\n\r\n  /// OPTION 1 putting states one by one which is easy....\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n\r\n  /// OPTION 2\r\n  // putting all states in one object\r\n  const amountChangeHandler = (e) => {\r\n    // setUserInput({\r\n    // ...userInput,\r\n    // enteredAmount: e.target.value,\r\n    // });\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredAmount: e.target.value };\r\n    });\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredDate: e.target.value };\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +userInput.enteredAmount,\r\n      date: new Date(userInput.enteredDate),\r\n    };\r\n    props.onExpenseFormSubmition(expenseData);\r\n\r\n    setUserInput({\r\n      enteredAmount: \"\",\r\n      enteredDate: \"\",\r\n    });\r\n    setEnteredTitle(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>{enteredTitle}</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>{userInput.enteredAmount}</label>\r\n          <input\r\n            type=\"number\"\r\n            value={userInput.enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>{userInput.enteredDate}</label>\r\n          <input\r\n            type=\"date\"\r\n            value={userInput.enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setisEditing] = useState(false);\r\n  const onExpenseFormSubmitionHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onExpenses(expenseData);\r\n    setisEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setisEditing(true);\r\n  };\r\n  const cancelEditingHandler = () => {\r\n    setisEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onExpenseFormSubmition={onExpenseFormSubmitionHandler}\r\n          onCancel={cancelEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport DisplayExpenses from \"./components/Expenses/DisplayExpenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prev) => {\n      return [expense, ...prev];\n    });\n  };\n  /// all custom HTML elements must start with uppercase or it won't work\n  return (\n    <div>\n      <NewExpense onExpenses={addExpenseHandler} />\n      <DisplayExpenses data={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}